/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
    }
  }
}

@layer theme {
  .tailwind, .tailwind :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-500: oklch(.637 .237 25.331);
    --color-yellow-400: oklch(.852 .199 91.936);
    --color-yellow-500: oklch(.795 .184 86.047);
    --color-yellow-600: oklch(.681 .162 75.834);
    --color-blue-500: oklch(.623 .214 259.815);
    --color-blue-600: oklch(.546 .245 262.881);
    --color-gray-50: oklch(.985 .002 247.839);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-gray-200: oklch(.928 .006 264.531);
    --color-gray-300: oklch(.872 .01 258.338);
    --color-gray-400: oklch(.707 .022 261.325);
    --color-gray-500: oklch(.551 .027 264.364);
    --color-gray-600: oklch(.446 .03 256.802);
    --color-gray-700: oklch(.373 .034 259.733);
    --color-gray-800: oklch(.278 .033 256.848);
    --color-gray-900: oklch(.21 .034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-xl: 36rem;
    --container-5xl: 64rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-md: .375rem;
    --radius-lg: .5rem;
    --blur-sm: 8px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  .tailwind *, .tailwind :after, .tailwind :before, .tailwind ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  .tailwind ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  .tailwind html, .tailwind :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  .tailwind body {
    line-height: inherit;
  }

  .tailwind hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  .tailwind abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  .tailwind h1, .tailwind h2, .tailwind h3, .tailwind h4, .tailwind h5, .tailwind h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  .tailwind a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  .tailwind b, .tailwind strong {
    font-weight: bolder;
  }

  .tailwind code, .tailwind kbd, .tailwind samp, .tailwind pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  .tailwind small {
    font-size: 80%;
  }

  .tailwind sub, .tailwind sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  .tailwind sub {
    bottom: -.25em;
  }

  .tailwind sup {
    top: -.5em;
  }

  .tailwind table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  .tailwind :-moz-focusring {
    outline: auto;
  }

  .tailwind progress {
    vertical-align: baseline;
  }

  .tailwind summary {
    display: list-item;
  }

  .tailwind ol, .tailwind ul, .tailwind menu {
    list-style: none;
  }

  .tailwind img, .tailwind svg, .tailwind video, .tailwind canvas, .tailwind audio, .tailwind iframe, .tailwind embed, .tailwind object {
    vertical-align: middle;
    display: block;
  }

  .tailwind img, .tailwind video {
    max-width: 100%;
    height: auto;
  }

  .tailwind button, .tailwind input, .tailwind select, .tailwind optgroup, .tailwind textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  .tailwind ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  .tailwind :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  .tailwind :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  .tailwind ::file-selector-button {
    margin-inline-end: 4px;
  }

  .tailwind ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .tailwind ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  .tailwind textarea {
    resize: vertical;
  }

  .tailwind ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  .tailwind ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  .tailwind ::-webkit-datetime-edit {
    display: inline-flex;
  }

  .tailwind ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  .tailwind ::-webkit-datetime-edit {
    padding-block: 0;
  }

  .tailwind ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  .tailwind ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  .tailwind ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  .tailwind ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  .tailwind ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  .tailwind ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  .tailwind ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  .tailwind ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  .tailwind :-moz-ui-invalid {
    box-shadow: none;
  }

  .tailwind button, .tailwind input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  .tailwind ::file-selector-button {
    appearance: button;
  }

  .tailwind ::-webkit-inner-spin-button {
    height: auto;
  }

  .tailwind ::-webkit-outer-spin-button {
    height: auto;
  }

  .tailwind [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}

@layer utilities {
  .tailwind .pointer-events-none {
    pointer-events: none;
  }

  .tailwind .absolute {
    position: absolute;
  }

  .tailwind .fixed {
    position: fixed;
  }

  .tailwind .relative {
    position: relative;
  }

  .tailwind .sticky {
    position: sticky;
  }

  .tailwind .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .tailwind .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .tailwind .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .tailwind .top-1\/2 {
    top: 50%;
  }

  .tailwind .top-2 {
    top: calc(var(--spacing) * 2);
  }

  .tailwind .-right-2 {
    right: calc(var(--spacing) * -2);
  }

  .tailwind .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .tailwind .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .tailwind .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .tailwind .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .tailwind .bottom-6 {
    bottom: calc(var(--spacing) * 6);
  }

  .tailwind .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .tailwind .left-1\/2 {
    left: 50%;
  }

  .tailwind .left-2 {
    left: calc(var(--spacing) * 2);
  }

  .tailwind .left-3 {
    left: calc(var(--spacing) * 3);
  }

  .tailwind .left-4 {
    left: calc(var(--spacing) * 4);
  }

  .tailwind .z-10 {
    z-index: 10;
  }

  .tailwind .z-20 {
    z-index: 20;
  }

  .tailwind .z-30 {
    z-index: 30;
  }

  .tailwind .z-40 {
    z-index: 40;
  }

  .tailwind .z-50 {
    z-index: 50;
  }

  .tailwind .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .tailwind .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .tailwind .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .tailwind .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .tailwind .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .tailwind .container {
      max-width: 96rem;
    }
  }

  .tailwind .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }

  .tailwind .mx-auto {
    margin-inline: auto;
  }

  .tailwind .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .tailwind .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .tailwind .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .tailwind .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }

  .tailwind .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .tailwind .mr-6 {
    margin-right: calc(var(--spacing) * 6);
  }

  .tailwind .mr-8 {
    margin-right: calc(var(--spacing) * 8);
  }

  .tailwind .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .tailwind .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .tailwind .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .tailwind .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .tailwind .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .tailwind .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .tailwind .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .tailwind .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .tailwind .ml-auto {
    margin-left: auto;
  }

  .tailwind .block {
    display: block;
  }

  .tailwind .flex {
    display: flex;
  }

  .tailwind .grid {
    display: grid;
  }

  .tailwind .hidden {
    display: none;
  }

  .tailwind .inline-block {
    display: inline-block;
  }

  .tailwind .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .tailwind .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .tailwind .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .tailwind .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .tailwind .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .tailwind .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .tailwind .h-28 {
    height: calc(var(--spacing) * 28);
  }

  .tailwind .h-48 {
    height: calc(var(--spacing) * 48);
  }

  .tailwind .h-64 {
    height: calc(var(--spacing) * 64);
  }

  .tailwind .h-80 {
    height: calc(var(--spacing) * 80);
  }

  .tailwind .h-\[200px\] {
    height: 200px;
  }

  .tailwind .h-\[300px\] {
    height: 300px;
  }

  .tailwind .h-full {
    height: 100%;
  }

  .tailwind .max-h-\[90vh\] {
    max-height: 90vh;
  }

  .tailwind .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .tailwind .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .tailwind .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .tailwind .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .tailwind .w-28 {
    width: calc(var(--spacing) * 28);
  }

  .tailwind .w-40 {
    width: calc(var(--spacing) * 40);
  }

  .tailwind .w-auto {
    width: auto;
  }

  .tailwind .w-full {
    width: 100%;
  }

  .tailwind .max-w-5xl {
    max-width: var(--container-5xl);
  }

  .tailwind .max-w-md {
    max-width: var(--container-md);
  }

  .tailwind .max-w-none {
    max-width: none;
  }

  .tailwind .max-w-sm {
    max-width: var(--container-sm);
  }

  .tailwind .max-w-xl {
    max-width: var(--container-xl);
  }

  .tailwind .flex-1 {
    flex: 1;
  }

  .tailwind .flex-shrink-0 {
    flex-shrink: 0;
  }

  .tailwind .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .tailwind .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .tailwind .cursor-pointer {
    cursor: pointer;
  }

  .tailwind .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .tailwind .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .tailwind .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .tailwind .flex-col {
    flex-direction: column;
  }

  .tailwind .place-items-center {
    place-items: center;
  }

  .tailwind .items-center {
    align-items: center;
  }

  .tailwind .justify-between {
    justify-content: space-between;
  }

  .tailwind .justify-center {
    justify-content: center;
  }

  .tailwind .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .tailwind .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .tailwind .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .tailwind .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .tailwind .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  :where(.tailwind .space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.tailwind .space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.tailwind .space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.tailwind .space-x-6 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  .tailwind .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .tailwind .overflow-hidden {
    overflow: hidden;
  }

  .tailwind .overflow-y-auto {
    overflow-y: auto;
  }

  .tailwind .rounded {
    border-radius: .25rem;
  }

  .tailwind .rounded-full {
    border-radius: 3.40282e38px;
  }

  .tailwind .rounded-lg {
    border-radius: var(--radius-lg);
  }

  .tailwind .rounded-md {
    border-radius: var(--radius-md);
  }

  .tailwind .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .tailwind .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .tailwind .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .tailwind .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .tailwind .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }

  .tailwind .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .tailwind .border-gray-700 {
    border-color: var(--color-gray-700);
  }

  .tailwind .bg-black\/40 {
    background-color: #0006;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .tailwind .bg-black\/40 {
      background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }

  .tailwind .bg-black\/60 {
    background-color: #0009;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .tailwind .bg-black\/60 {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }

  .tailwind .bg-gray-50 {
    background-color: var(--color-gray-50);
  }

  .tailwind .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .tailwind .bg-gray-800 {
    background-color: var(--color-gray-800);
  }

  .tailwind .bg-gray-900 {
    background-color: var(--color-gray-900);
  }

  .tailwind .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .tailwind .bg-white {
    background-color: var(--color-white);
  }

  .tailwind .bg-white\/30 {
    background-color: #ffffff4d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .tailwind .bg-white\/30 {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }

  .tailwind .bg-white\/50 {
    background-color: #ffffff80;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .tailwind .bg-white\/50 {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }

  .tailwind .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }

  .tailwind .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .tailwind .from-black\/70 {
    --tw-gradient-from: #000000b3;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .tailwind .from-black\/70 {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 70%, transparent);
    }
  }

  .tailwind .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .tailwind .object-contain {
    object-fit: contain;
  }

  .tailwind .object-cover {
    object-fit: cover;
  }

  .tailwind .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .tailwind .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }

  .tailwind .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .tailwind .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .tailwind .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .tailwind .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .tailwind .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .tailwind .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .tailwind .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .tailwind .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .tailwind .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .tailwind .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .tailwind .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .tailwind .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .tailwind .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .tailwind .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }

  .tailwind .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }

  .tailwind .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .tailwind .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }

  .tailwind .text-center {
    text-align: center;
  }

  .tailwind .align-middle {
    vertical-align: middle;
  }

  .tailwind .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .tailwind .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .tailwind .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .tailwind .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .tailwind .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .tailwind .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .tailwind .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .tailwind .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .tailwind .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .tailwind .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .tailwind .whitespace-nowrap {
    white-space: nowrap;
  }

  .tailwind .whitespace-pre-line {
    white-space: pre-line;
  }

  .tailwind .text-blue-500 {
    color: var(--color-blue-500);
  }

  .tailwind .text-blue-600 {
    color: var(--color-blue-600);
  }

  .tailwind .text-gray-300 {
    color: var(--color-gray-300);
  }

  .tailwind .text-gray-400 {
    color: var(--color-gray-400);
  }

  .tailwind .text-gray-500 {
    color: var(--color-gray-500);
  }

  .tailwind .text-gray-600 {
    color: var(--color-gray-600);
  }

  .tailwind .text-gray-700 {
    color: var(--color-gray-700);
  }

  .tailwind .text-gray-800 {
    color: var(--color-gray-800);
  }

  .tailwind .text-gray-900 {
    color: var(--color-gray-900);
  }

  .tailwind .text-white {
    color: var(--color-white);
  }

  .tailwind .text-yellow-400 {
    color: var(--color-yellow-400);
  }

  .tailwind .line-through {
    text-decoration-line: line-through;
  }

  .tailwind .opacity-0 {
    opacity: 0;
  }

  .tailwind .opacity-100 {
    opacity: 1;
  }

  .tailwind .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .tailwind .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .tailwind .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .tailwind .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .tailwind .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .tailwind .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .tailwind .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .tailwind .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .tailwind .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .tailwind .duration-1000 {
    --tw-duration: 1s;
    transition-duration: 1s;
  }

  .tailwind .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  @media (hover: hover) {
    .tailwind .hover\:bg-gray-200:hover {
      background-color: var(--color-gray-200);
    }
  }

  @media (hover: hover) {
    .tailwind .hover\:bg-white\/50:hover {
      background-color: #ffffff80;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .tailwind .hover\:bg-white\/50:hover {
        background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .tailwind .hover\:bg-yellow-600:hover {
      background-color: var(--color-yellow-600);
    }
  }

  @media (hover: hover) {
    .tailwind .hover\:text-gray-700:hover {
      color: var(--color-gray-700);
    }
  }

  @media (hover: hover) {
    .tailwind .hover\:text-white:hover {
      color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .tailwind .hover\:text-yellow-600:hover {
      color: var(--color-yellow-600);
    }
  }

  @media (hover: hover) {
    .tailwind .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  .tailwind .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .tailwind .focus\:ring-blue-500:focus {
    --tw-ring-color: var(--color-blue-500);
  }

  .tailwind .focus\:ring-yellow-500:focus {
    --tw-ring-color: var(--color-yellow-500);
  }

  .tailwind .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (width >= 40rem) {
    .tailwind .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:mx-0 {
      margin-inline: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:mr-8 {
      margin-right: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:mb-0 {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:ml-0 {
      margin-left: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:block {
      display: block;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:flex {
      display: flex;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:hidden {
      display: none;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:h-20 {
      height: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:h-\[250px\] {
      height: 250px;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:h-\[380px\] {
      height: 380px;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:w-1\/4 {
      width: 25%;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:w-3\/4 {
      width: 75%;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:items-start {
      align-items: flex-start;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:text-left {
      text-align: left;
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .tailwind .md\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .tailwind .lg\:h-24 {
      height: calc(var(--spacing) * 24);
    }
  }

  @media (width >= 64rem) {
    .tailwind .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .tailwind .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .tailwind .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}
